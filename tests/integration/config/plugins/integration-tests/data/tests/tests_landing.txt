# Copyright (c) 2023 by quyykk
#
# Endless Sky is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later version.
#
# Endless Sky is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <https://www.gnu.org/licenses/>.

test-data "Landing Save"
	category "savegame"
	contents
		pilot First Last
		date 16 11 3013
		system Sol
		planet Earth
		clearance
		ship "Star Barge"
			name "Star Barge"
			sprite "ship/star barge"
			attributes
				category "Light Freighter"
				cost 190000
				mass 10
				bunks 3
				"cargo space" 50
				drag 1
				"engine capacity" 400
				"fuel capacity" 300
				"heat dissipation" 0.8
				hull 1000
				"outfit space" 1300
				"required crew" 1
				shields 600
				"turret mounts" 1
				"weapon capacity" 200
				"thrust" 50
				"turn" 1000
			outfits
				Hyperdrive
				"nGVF-BB Fuel Cell"
				"LP036a Battery Pack"
			crew 1
			fuel 300
			shields 600
			hull 1000
			position 0 0
			engine -9 38 1
			engine 9 38 1
			turret 0 -8
			leak leak 60 50
			explode "tiny explosion" 10
			explode "small explosion" 10
			system Sol
			planet Earth
		account
			credits 100000000
			score 400
			history
		visited Sol
		"visited planet" Earth


test "Landing in a system with multiple planets"
	status active
	description "Test if a ship can land on different planets in a single system."
	sequence
		inject "Landing Save"
		call "Load First Savegame"
		call "Depart"
		call "Wait 55 steps"
		assert
			"flagship landed" == 0
		navigate
			"travel destination" Mars
		call "Land"
		assert
			"flagship planet: Mars" == 1
		call "Depart"
		call "Wait 55 steps"
		assert
			"flagship landed" == 0
		navigate
			"travel destination" Luna
		call "Land"
		assert
			"flagship planet: Luna" == 1
		call "Depart"
		call "Wait 55 steps"
		assert
			"flagship landed" == 0
		navigate
			"travel destination" Earth
		call "Land"
		assert
			"flagship planet: Earth" == 1

