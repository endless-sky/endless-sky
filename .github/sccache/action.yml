name: Install sccache
description: Installs sccache for the current platform
inputs:
  read-only:
    description: Whether the cache should be read-only
    default: 'false'
runs:
  using: 'composite'
  steps:
    - name: Set environment variables
      run: echo "SCCACHE_VERSION=v0.4.1" >> $GITHUB_ENV
      shell: bash
    - name: Download sccache
      run: |
        if [ $RUNNER_OS == "Linux" ]; then
            PLATFORM="unknown-linux-musl"
        elif [ $RUNNER_OS == "Windows" ]; then
            PLATFORM="pc-windows-msvc"
        elif [ $RUNNER_OS == "macOS" ]; then
            PLATFORM="apple-darwin"
        fi
        gh release download -R mozilla/sccache ${{ env.SCCACHE_VERSION }} -p sccache-${{ env.SCCACHE_VERSION }}-x86_64-$PLATFORM.tar.gz
      shell: bash

    - name: Extract
      run: tar xf sccache-*.tar.gz --strip-components=1
      shell: bash
    - name: Add to PATH
      if: ${{ runner.os != 'Windows' }}
      run: echo "$PWD" >> $GITHUB_PATH
      shell: bash
    - name: Add to PATH (Windows)
      if: ${{ runner.os == 'Windows' }}
      run: (Get-Item .).FullName >> $env:GITHUB_PATH
      shell: pwsh
    - name: Write to the cache
      if: ${{ inputs.read-only == 'false' && github.event_name == 'push' }}
      run: echo "SCCACHE_GHA_CACHE_TO=sccache-${{ github.sha }}" >> $GITHUB_ENV
      shell: bash
    - name: Read from the cache
      run: echo "SCCACHE_GHA_CACHE_FROM=sccache-" >> $GITHUB_ENV
      shell: bash
    - name: Configure sccache
      uses: actions/github-script@v6
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
