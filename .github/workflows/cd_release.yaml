name: Release CD

on:
  release:
    types:
      - published

jobs:
  appimage_amd64:
    name: Linux
    runs-on: ubuntu-20.04
    env:
      ARCH: x86_64
      OUTPUT: endless-sky-amd64-${{ github.event.release.tag_name }}.AppImage
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo rm /etc/apt/sources.list.d/* && sudo dpkg --clear-avail # Speed up installation and get rid of unwanted lists
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libsdl2-dev libpng-dev libjpeg-turbo8-dev libopenal-dev libmad0-dev libglew-dev libgl1-mesa-dev libegl1-mesa-dev libgles2-mesa-dev uuid-dev
          python3 -m pip install --user scons
      - name: Build AppImage
        run: ./utils/build_appimage.sh
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.OUTPUT }}
          path: ${{ env.OUTPUT }}
      - name: Upload AppImage
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.OUTPUT }}
          asset_name: ${{ env.OUTPUT }}
          asset_content_type: application/octet-stream


  release_macos_universal:
    name: MacOS Universal
    runs-on: macos-12
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      OUTPUT: Endless-Sky-${{ github.event.release.tag_name }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup sccache
        uses: ./.github/sccache
        with:
          read-only: 'true'
      - uses: lukka/get-cmake@latest
      - uses: lukka/run-vcpkg@v10
        with:
          vcpkgGitCommitId: '163fe7bd3d67c41200617caaa245b5ba2ba854e6'
      - uses: lukka/run-cmake@v10
        with:
          configurePreset: 'macos-arm-release'
          buildPreset: 'macos-ci-release'
      - name: Prepare for x64 app bundle
        run: |
          mv "build/release/Endless Sky.app" "Endless Sky.app.arm"
          rm -rf build/release
      - uses: lukka/run-cmake@v10
        with:
          configurePreset: 'macos-release'
          buildPreset: 'macos-ci-release'
      - name: Create universal binary
        run: |
          mv "build/release/Endless Sky.app" "Endless Sky.app.x64"
          cp -r "Endless Sky.app.arm" "Endless Sky.app"
          lipo -create -output "Endless Sky.app/Contents/MacOS/Endless Sky" "Endless Sky.app.arm/Contents/MacOS/Endless Sky" "Endless Sky.app.x64/Contents/MacOS/Endless Sky"
          for lib in "Endless Sky.app/Contents/Frameworks/"*; do lipo -create -output "$lib" "Endless Sky.app.arm/Contents/Frameworks/$(basename "$lib")" "Endless Sky.app.x64/Contents/Frameworks/$(basename "$lib")"; done
      - name: Package Application
        run: |
          mkdir "${{ env.OUTPUT }}"
          cp -r "Endless Sky.app" "${{ env.OUTPUT }}"
          ln -s /Applications "${{ env.OUTPUT }}"
          hdiutil create -ov -fs HFS+ -format UDZO -imagekey zlib-level=9 -srcfolder "${{ env.OUTPUT }}" "${{ github.workspace }}/${{ env.OUTPUT }}.dmg"
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.OUTPUT }}.dmg
