name: Steam

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_linux:
    name: Linux
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        arch: [x64, x86]
    env:
      snapshot: latest-container-runtime-depot
      runtime: steam-container-runtime.tar.gz
      platform: com.valvesoftware.SteamRuntime.Platform-amd64,i386-sniper-runtime.tar.gz
    steps:
    - uses: actions/checkout@v4
      with:
        show-progress: false

    # Build the binary
    - name: Save Steam runtime version
      id: steamrt-version
      run: |
        STEAM_VERSION=$(curl -sSf https://repo.steampowered.com/steamrt-images-sniper/snapshots/latest-container-runtime-depot/VERSION.txt --output -)
        echo "RT_VERSION=$STEAM_VERSION" >> $GITHUB_ENV
    - name: Build Endless Sky
      run: |
        cd steam
        docker-compose run steam-${{ matrix.arch }}

    # Test the binary
    - name: Install runtime dependencies
      run: |
        sudo rm /etc/apt/sources.list.d/* && sudo dpkg --clear-avail # Speed up installation and get rid of unwanted lists
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends libosmesa6 mesa-utils
    - name: Restore cached Steam Runtime environment
      id: cache-runtime
      uses: actions/cache@v4
      with:
        path: |
          ${{ env.runtime }}
          ${{ env.platform }}
        key: steamrt-${{ env.RT_VERSION }}
    - name: Download Steam Runtime environment
      if: steps.cache-runtime.outputs.cache-hit != 'true'
      run: |
        curl -sSf https://repo.steampowered.com/steamrt-images-sniper/snapshots/${{ env.snapshot }}/${{ env.runtime }} > ${{ env.runtime }}
        curl -sSf https://repo.steampowered.com/steamrt-images-sniper/snapshots/${{ env.snapshot }}/${{ env.platform }} > ${{ env.platform }}
    - name: Extract Steam Runtime
      run: |
        tar -xf ${{ env.runtime }}
        tar -xf ${{ env.platform }} -C steam-container-runtime/depot/sniper_platform_*/
    - name: Verify executable
      run: ./steam-container-runtime/depot/run-in-sniper ./build/steam-${{ matrix.arch }}/endless-sky -- -v
    - name: Execute data parsing test
      run: ./steam-container-runtime/depot/run-in-sniper ./build/steam-${{ matrix.arch }}/endless-sky -- -p
    - name: Execute integration data parsing test
      run: ./steam-container-runtime/depot/run-in-sniper ./build/steam-${{ matrix.arch }}/endless-sky -- -p --config tests/integration/config
    - name: Execute tests
      run: |
        cd steam
        docker-compose run test-steam-${{ matrix.arch }}
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: binary-steam-${{ matrix.arch }}
        path: build/steam-${{ matrix.arch }}/endless-sky
