version: '{branch}.{build}'

branches:
  except:
    - gh-pages

clone_depth: 2

environment:
  # Building with MinGW-w64 version 6.3.0. These env settings are used by the makefile.
  MINGW_ROOT: C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1\mingw64
  IMPL_DIR: ../obj/pkgd
  TEST_REPORT_FILE: .\tests\test-report.xml
  matrix:
    - es_run_mode: 'dist'

install:
  - ps: |
      # Update env variables to use the desired MinGW version
      Set-AppveyorBuildVariable -Name PATH -Value "$Env:MINGW_ROOT\bin\;$Env:PATH";
      Set-AppveyorBuildVariable -Name DIR_MINGW64 -Value "$Env:MINGW_ROOT\x86_64-w64-mingw32";
      # Ensure we have the precompiled libraries to link with (SDL, etc.).
      if (!(Test-Path 'C:\dev64')) { New-Item 'C:\dev64' -ItemType Directory; }
      if (!(Test-Path 'C:\dev64\bin'))
      {
        Start-FileDownload 'http://endless-sky.github.io/win64-dev.zip' 'C:\dev64.zip'
        $zipArgs = 'x C:\dev64.zip -oC:\';
        Start-Process '7z.exe' -ArgumentList $zipArgs -Wait;
      }

cache:
  - C:\dev64

build_script:
  - ps: mingw32-make.exe -k -j2 -e -f .winmake $Env:es_run_mode;
  - ps: |
      cd tests;
      mingw32-make.exe -j2 -e -f makefile test;
      cd ..;

before_test:
  - ps: |
      $here = (Get-Location).Path;
      Copy-Item -Path "bin\*\EndlessSky.exe" -Destination $here;
      Copy-Item -Path "C:\dev64\bin\*.dll" -Exclude "libstdc*" -Destination $here;

test_script:
  - ps: .\tests\test_parse.ps1 'EndlessSky.exe';
  - ps: .\tests\bin\endless-sky-tests.exe -r junit -o $Env:TEST_REPORT_FILE;

# Upload the build if tests passed.
after_test:
  - ps: |
      $here = (Get-Location).Path;
      Copy-Item -Path "$Env:DIR_MINGW64\lib\libstdc++-6.dll" -Destination $here;
      Copy-Item -Path "$Env:DIR_MINGW64\lib\libgcc_s_seh-1.dll" -Destination $here;
      Copy-Item -Path "$Env:DIR_MINGW64\lib\libwinpthread-1.dll" -Destination $here;
      # Zip the directory for release
      $ARCHIVE_NAME = "$Env:APPVEYOR_REPO_NAME-$Env:APPVEYOR_REPO_BRANCH-$Env:APPVEYOR_REPO_COMMIT-win64.7z";
      $ZIP_ARGS = "a $ARCHIVE_NAME .\*.exe -i!.\*.dll -i!.\data\ -i!.\icons\ -i!.\images\ -i!.\sounds\ -i!.\source\ -i!license.txt -i!copyright -i!README.md -i!changelog -i!credits.txt -i!keys.txt";
      Start-Process '7z.exe' -ArgumentList $ZIP_ARGS -Wait;
      Push-AppveyorArtifact $ARCHIVE_NAME;

# Upload the test report even if tests failed.
on_finish:
  - ps: |
      if ([System.IO.File]::Exists($Env:TEST_REPORT_FILE))
      {
        (New-Object 'System.Net.WebClient').UploadFile(
          "https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)",
          (Resolve-Path $Env:TEST_REPORT_FILE)
        );
      }
